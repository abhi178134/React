{"ast":null,"code":"var _jsxFileName = \"/home/abhijeet/Desktop/React/part2-phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport PersonForm from './components/PersonForm';\nimport Content from './components/Content';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport personService from './services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [Persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456'\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523'\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345'\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122'\n  }]);\n  const [allPersons, setAllPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [message, setMessage] = useState(null);\n  React.useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setAllPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const person = allPersons.filter(person => person.name === newName);\n    const personToAdd = person[o];\n    const updatedPerson = { ...personToAdd,\n      number: newNumber\n    };\n\n    if (person.length !== 0) {\n      if (window.confirm('${personToAdd.name} is already added to the phonebook, replace the old number with new one ?')) {\n        personService.upadte(updatedPerson.id, updatedPerson).then(returnedPerson => {\n          console.log('${returnedPerson.name} successfully updated');\n          setAllPersons(allPersons.map(personItem => personItem.id !== personToAdd.id ? personItem : returnedPerson));\n          setNewName('');\n          setNewNumber('');\n          setMessage('${updatedPerson.name} was successfully updated');\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        }).catch(error => {\n          console.log(error);\n          setAllPersons(allPersons.filter(person => person.id !== updatedPerson.id));\n          setNewName('');\n          setNewNumber('');\n          setMessage(`[ERROR] ${updatedPerson.name} was already deleted from server`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n      }\n    } else {\n      const personToAdd = {\n        name: newName,\n        number: newNumber\n      };\n      personService.create(personToAdd).then(returnedPerson => {\n        setAllPersons(allPersons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n        setMessage('${newName} was successfully added');\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      }).catch(error => {\n        setMessage('[ERROR] ${error.response.data.error}');\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        console.log(error.response.data);\n      });\n    }\n  };\n\n  const deletePerson = id => {\n    const filteredPerson = allPersons.filter(person => person.id === id);\n    const personName = filteredPerson[0].name;\n    const personId = filteredPerson[0].id;\n\n    if (window.confirm(`Delete ${personName} ?`)) {\n      personService.remove(personId);\n      console.log(`${personName} successfully deleted`);\n      setMessage(`${personName} was successfully deleted`);\n      setAllPersons(allPersons.filter(person => person.id !== personId));\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleNameChange = event => {\n    //console.log(event.target.value)\n    setNewName(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n    const regex = new RegExp(newFilter, 'i');\n\n    const filteredPersons = () => allPersons.filter(person => person.name.match(regex));\n\n    setPersons(filteredPersons);\n  };\n\n  const handleNumberChange = event => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: newFilter,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add new person\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      onSubmit: addPerson,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newNumber: newNumber,\n      handleNumberChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      persons: persons,\n      allPersons: allPersons,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"HGbCF5X4khC8hHQvTJZfbhyCyc4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/abhijeet/Desktop/React/part2-phonebook/src/App.js"],"names":["React","useState","PersonForm","Content","Filter","Notification","personService","App","Persons","setPersons","name","number","allPersons","setAllPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","message","setMessage","useEffect","getAll","then","initialPersons","addPerson","event","preventDefault","person","filter","personToAdd","o","updatedPerson","length","window","confirm","upadte","id","returnedPerson","console","log","map","personItem","setTimeout","catch","error","create","concat","response","data","deletePerson","filteredPerson","personName","personId","remove","handleNameChange","target","value","handleFilterChange","regex","RegExp","filteredPersons","match","handleNumberChange","persons"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\nimport PersonForm from './components/PersonForm'\nimport Content from './components/Content'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ Persons, setPersons ] = useState([\n  { name: 'Arto Hellas', number: '040-123456' },\n  { name: 'Ada Lovelace', number: '39-44-5323523' },\n  { name: 'Dan Abramov', number: '12-43-234345' },\n  { name: 'Mary Poppendieck', number: '39-23-6423122' }\n]) \n  const [allPersons,setAllPersons]=useState([])\n  const [newName,setNewName] =  useState('')\n  const [newNumber,setNewNumber] =  useState('')\n  const [newFilter,setNewFilter]=useState('')\n  const [message, setMessage] = useState(null);\n\n  React.useEffect(() => {\n    personService.getAll()\n    .then(initialPersons => {\n      setAllPersons(initialPersons)\n    })\n  },[]);\n  \n  const addPerson =(event) =>{\n    event.preventDefault()\n    const person = allPersons.filter((person) =>\n    person.name === newName\n    )\n    const personToAdd =person[o]\n    const updatedPerson = { ...personToAdd,number: newNumber}\n    if(person.length !== 0) {\n      if(window.confirm('${personToAdd.name} is already added to the phonebook, replace the old number with new one ?')) {\n        personService\n        .upadte(updatedPerson.id,updatedPerson).then(returnedPerson => {\n          console.log('${returnedPerson.name} successfully updated')\n          setAllPersons(allPersons.map(personItem => personItem.id !== personToAdd.id ? personItem : returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setMessage(\n            '${updatedPerson.name} was successfully updated'\n          )\n          setTimeout (() => {\n            setMessage(null)\n          },5000)\n        })\n        .catch((error) => {\n          console.log(error);\n          setAllPersons(allPersons.filter(person => person.id !== updatedPerson.id))\n          setNewName('')\n          setNewNumber('')\n          setMessage(\n            `[ERROR] ${updatedPerson.name} was already deleted from server`\n          )\n          setTimeout(()=> {\n            setMessage(null)\n          },5000)\n        })\n      }\n    }\n    else {\n      const personToAdd = {\n        name : newName,\n        number : newNumber\n      }\n      personService\n      .create(personToAdd)\n      .then(returnedPerson => {\n        setAllPersons(allPersons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage(\n          '${newName} was successfully added'\n        )\n        setTimeout(()=> {\n          setMessage(null)\n        },5000)\n      })\n      .catch(error => {\n        setMessage(\n          '[ERROR] ${error.response.data.error}'\n        )\n        setTimeout(()=> {\n          setMessage(null)\n        },5000)\n        console.log(error.response.data)\n      })\n    }\n  }\n\n  const deletePerson = (id) => {\n    const filteredPerson = allPersons.filter(person => person.id === id)\n    const personName = filteredPerson[0].name\n    const personId = filteredPerson[0].id\n    if (window.confirm(`Delete ${personName} ?`)) {\n      personService\n        .remove(personId)\n      console.log(`${personName} successfully deleted`)\n      setMessage(\n        `${personName} was successfully deleted`\n      )\n      setAllPersons(allPersons.filter(person => person.id !== personId))\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleNameChange = (event) =>\n  {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n    const regex = new RegExp( newFilter, 'i' );\n    const filteredPersons = () => allPersons.filter(person => person.name.match(regex))\n    setPersons(filteredPersons)\n  }\n  const handleNumberChange = (event) =>\n  {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message ={message} />\n      <Filter value ={newFilter} onChange={handleFilterChange} />\n      <h2>Add new person</h2>\n      <PersonForm onSubmit={addPerson} newName={newName} handleNameChange={handleNameChange}  newNumber={newNumber} handleNumberChange={handleNumberChange}  />\n      <h2>Numbers</h2>\n      <Content persons={persons} allPersons={allPersons} deletePerson={deletePerson} />\n{/*     \n      <form>\n        Filter Shown With \n        <input value={newText} onChange={Search} />\n      </form>\n      <form onSubmit ={addPerson}>\n        <div>\n          <h3>Add A New</h3>\n          Name: <input value={newName} onChange={handleNameChange} />\n          <br/>\n          Number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type =\"submit\">add</button>\n        </div>\n      </form>\n      <h3>Contact & Numbers</h3>\n      <ul>\n        {searchResults.map(person =>\n        <Person key={person.name} person={person} />\n      )}\n      </ul> */}\n    </div>\n  )\n} \nexport default App;\n"]},"metadata":{},"sourceType":"module"}