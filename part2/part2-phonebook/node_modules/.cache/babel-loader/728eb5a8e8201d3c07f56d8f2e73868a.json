{"ast":null,"code":"var _jsxFileName = \"/home/abhijeet/Desktop/React/part2-phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Content from './components/Content';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport PersonForm from './components/PersonForm';\nimport personService from './services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [allPersons, setAllPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setAllPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const person = allPersons.filter(person => person.name === newName);\n    const personToAdd = person[0];\n    const updatedPerson = { ...personToAdd,\n      number: newNumber\n    };\n\n    if (person.length !== 0) {\n      if (window.confirm(`${personToAdd.name} is already added to the phonebook, replace the old number with a new one ?`)) {\n        personService.update(updatedPerson.id, updatedPerson).then(returnedPerson => {\n          console.log(`${returnedPerson.name} successfully updated`);\n          setAllPersons(allPersons.map(personItem => personItem.id !== personToAdd.id ? personItem : returnedPerson));\n          setNewName('');\n          setNewNumber('');\n          setMessage(`${updatedPerson.name} was successfully updated`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        }).catch(error => {\n          console.log(error);\n          setAllPersons(allPersons.filter(person => person.id !== updatedPerson.id));\n          setNewName('');\n          setNewNumber('');\n          setMessage(`[ERROR] ${updatedPerson.name} was already deleted from server`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n      }\n    } else {\n      const personToAdd = {\n        name: newName,\n        number: newNumber\n      };\n      personService.create(personToAdd).then(returnedPerson => {\n        setAllPersons(allPersons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n        setMessage(`${newName} was successfully added`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      }).catch(error => {\n        setMessage(`[ERROR] ${error.response.data.error}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        console.log(error.response.data);\n      });\n    }\n  };\n\n  const deletePerson = id => {\n    const filteredPerson = allPersons.filter(person => person.id === id);\n    const personName = filteredPerson[0].name;\n    const personId = filteredPerson[0].id;\n\n    if (window.confirm(`Delete ${personName} ?`)) {\n      personService.remove(personId);\n      console.log(`${personName} successfully deleted`);\n      setMessage(`${personName} was successfully deleted`);\n      setAllPersons(allPersons.filter(person => person.id !== personId));\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n    const regex = new RegExp(newFilter, 'i');\n\n    const filteredPersons = () => allPersons.filter(person => person.name.match(regex));\n\n    setPersons(filteredPersons);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: newFilter,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add new person\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      onSubmit: addPerson,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newNumber: newNumber,\n      handleNumberChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      persons: persons,\n      allPersons: allPersons,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"i8VDzUSE0gpWUarh2muoOCBLnLk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/abhijeet/Desktop/React/part2-phonebook/src/App.js"],"names":["React","useState","useEffect","Content","Filter","Notification","PersonForm","personService","App","persons","setPersons","allPersons","setAllPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","message","setMessage","getAll","then","initialPersons","addPerson","event","preventDefault","person","filter","name","personToAdd","updatedPerson","number","length","window","confirm","update","id","returnedPerson","console","log","map","personItem","setTimeout","catch","error","create","concat","response","data","deletePerson","filteredPerson","personName","personId","remove","handleNameChange","target","value","handleNumberChange","handleFilterChange","regex","RegExp","filteredPersons","match"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAAEU,UAAF,EAAcC,aAAd,IAA+BX,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAAEY,OAAF,EAAWC,UAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEc,SAAF,EAAaC,YAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,aAAa,CACVc,MADH,GAEGC,IAFH,CAEQC,cAAc,IAAI;AACxBX,MAAAA,aAAa,CAACW,cAAD,CAAb;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,MAAM,GAAGhB,UAAU,CAACiB,MAAX,CAAmBD,MAAD,IAC7BA,MAAM,CAACE,IAAP,KAAgBhB,OADL,CAAf;AAIA,UAAMiB,WAAW,GAAGH,MAAM,CAAC,CAAD,CAA1B;AACA,UAAMI,aAAa,GAAG,EAAE,GAAGD,WAAL;AAAkBE,MAAAA,MAAM,EAAEjB;AAA1B,KAAtB;;AAEA,QAAIY,MAAM,CAACM,MAAP,KAAkB,CAAtB,EAAyB;AACvB,UAAIC,MAAM,CAACC,OAAP,CAAgB,GAAEL,WAAW,CAACD,IAAK,6EAAnC,CAAJ,EAAsH;AACpHtB,QAAAA,aAAa,CACV6B,MADH,CACUL,aAAa,CAACM,EADxB,EAC4BN,aAD5B,EAC2CT,IAD3C,CACgDgB,cAAc,IAAI;AAC9DC,UAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,cAAc,CAACT,IAAK,uBAAnC;AACAjB,UAAAA,aAAa,CAACD,UAAU,CAAC8B,GAAX,CAAeC,UAAU,IAAIA,UAAU,CAACL,EAAX,KAAkBP,WAAW,CAACO,EAA9B,GAAmCK,UAAnC,GAAgDJ,cAA7E,CAAD,CAAb;AACAxB,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACAI,UAAAA,UAAU,CACP,GAAEW,aAAa,CAACF,IAAK,2BADd,CAAV;AAGAc,UAAAA,UAAU,CAAC,MAAM;AACfvB,YAAAA,UAAU,CAAC,IAAD,CAAV;AACD,WAFS,EAEP,IAFO,CAAV;AAGD,SAZH,EAaGwB,KAbH,CAaUC,KAAD,IAAW;AAChBN,UAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAjC,UAAAA,aAAa,CAACD,UAAU,CAACiB,MAAX,CAAkBD,MAAM,IAAIA,MAAM,CAACU,EAAP,KAAcN,aAAa,CAACM,EAAxD,CAAD,CAAb;AACAvB,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACAI,UAAAA,UAAU,CACP,WAAUW,aAAa,CAACF,IAAK,kCADtB,CAAV;AAGAc,UAAAA,UAAU,CAAC,MAAM;AACfvB,YAAAA,UAAU,CAAC,IAAD,CAAV;AACD,WAFS,EAEP,IAFO,CAAV;AAGD,SAxBH;AAyBD;AACF,KA5BD,MA4BO;AACH,YAAMU,WAAW,GAAG;AAChBD,QAAAA,IAAI,EAAEhB,OADU;AAEhBmB,QAAAA,MAAM,EAAEjB;AAFQ,OAApB;AAIER,MAAAA,aAAa,CACVuC,MADH,CACUhB,WADV,EAEGR,IAFH,CAEQgB,cAAc,IAAI;AACtB1B,QAAAA,aAAa,CAACD,UAAU,CAACoC,MAAX,CAAkBT,cAAlB,CAAD,CAAb;AACAxB,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAI,QAAAA,UAAU,CACP,GAAEP,OAAQ,yBADH,CAAV;AAGA8B,QAAAA,UAAU,CAAC,MAAM;AACfvB,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OAZH,EAaGwB,KAbH,CAaSC,KAAK,IAAI;AACdzB,QAAAA,UAAU,CACP,WAAUyB,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBJ,KAAM,EAD7B,CAAV;AAGAF,QAAAA,UAAU,CAAC,MAAM;AACfvB,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD,SAFS,EAEP,IAFO,CAAV;AAGAmB,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACG,QAAN,CAAeC,IAA3B;AACD,OArBH;AAsBL;AACF,GAjED;;AAmEA,QAAMC,YAAY,GAAIb,EAAD,IAAQ;AAC3B,UAAMc,cAAc,GAAGxC,UAAU,CAACiB,MAAX,CAAkBD,MAAM,IAAIA,MAAM,CAACU,EAAP,KAAcA,EAA1C,CAAvB;AACA,UAAMe,UAAU,GAAGD,cAAc,CAAC,CAAD,CAAd,CAAkBtB,IAArC;AACA,UAAMwB,QAAQ,GAAGF,cAAc,CAAC,CAAD,CAAd,CAAkBd,EAAnC;;AACA,QAAIH,MAAM,CAACC,OAAP,CAAgB,UAASiB,UAAW,IAApC,CAAJ,EAA8C;AAC5C7C,MAAAA,aAAa,CACV+C,MADH,CACUD,QADV;AAEAd,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEY,UAAW,uBAA1B;AACAhC,MAAAA,UAAU,CACP,GAAEgC,UAAW,2BADN,CAAV;AAGAxC,MAAAA,aAAa,CAACD,UAAU,CAACiB,MAAX,CAAkBD,MAAM,IAAIA,MAAM,CAACU,EAAP,KAAcgB,QAA1C,CAAD,CAAb;AACAV,MAAAA,UAAU,CAAC,MAAM;AACfvB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAhBD;;AAkBA,QAAMmC,gBAAgB,GAAI9B,KAAD,IAAW;AAClCX,IAAAA,UAAU,CAACW,KAAK,CAAC+B,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIjC,KAAD,IAAW;AACpCT,IAAAA,YAAY,CAACS,KAAK,CAAC+B,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAIA,QAAME,kBAAkB,GAAIlC,KAAD,IAAW;AACpCP,IAAAA,YAAY,CAACO,KAAK,CAAC+B,MAAN,CAAaC,KAAd,CAAZ;AACA,UAAMG,KAAK,GAAG,IAAIC,MAAJ,CAAY5C,SAAZ,EAAuB,GAAvB,CAAd;;AACA,UAAM6C,eAAe,GAAG,MAAMnD,UAAU,CAACiB,MAAX,CAAkBD,MAAM,IAAIA,MAAM,CAACE,IAAP,CAAYkC,KAAZ,CAAkBH,KAAlB,CAA5B,CAA9B;;AACAlD,IAAAA,UAAU,CAACoD,eAAD,CAAV;AACD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAE3C;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEF,SAAf;AAA0B,MAAA,QAAQ,EAAE0C;AAApC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEnC,SAAtB;AAAiC,MAAA,OAAO,EAAEX,OAA1C;AAAmD,MAAA,gBAAgB,EAAE0C,gBAArE;AAAuF,MAAA,SAAS,EAAExC,SAAlG;AAA6G,MAAA,kBAAkB,EAAE2C;AAAjI;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEjD,OAAlB;AAA2B,MAAA,UAAU,EAAEE,UAAvC;AAAmD,MAAA,YAAY,EAAEuC;AAAjE;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/HD;;GAAM1C,G;;KAAAA,G;AAiIN,eAAeA,GAAf","sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nimport Content from './components/Content'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ allPersons, setAllPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n      setAllPersons(initialPersons)\n    })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = allPersons.filter((person) =>\n        person.name === newName\n    )\n\n    const personToAdd = person[0]\n    const updatedPerson = { ...personToAdd, number: newNumber }\n\n    if (person.length !== 0) {\n      if (window.confirm(`${personToAdd.name} is already added to the phonebook, replace the old number with a new one ?`)) {\n        personService\n          .update(updatedPerson.id, updatedPerson).then(returnedPerson => {\n            console.log(`${returnedPerson.name} successfully updated`)\n            setAllPersons(allPersons.map(personItem => personItem.id !== personToAdd.id ? personItem : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setMessage(\n              `${updatedPerson.name} was successfully updated`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch((error) => {\n            console.log(error)\n            setAllPersons(allPersons.filter(person => person.id !== updatedPerson.id))\n            setNewName('')\n            setNewNumber('')\n            setMessage(\n              `[ERROR] ${updatedPerson.name} was already deleted from server`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n      }\n    } else {\n        const personToAdd = {\n            name: newName,\n            number: newNumber\n          }\n          personService\n            .create(personToAdd)\n            .then(returnedPerson => {\n              setAllPersons(allPersons.concat(returnedPerson))\n              setNewName('')\n              setNewNumber('')\n              setMessage(\n                `${newName} was successfully added`\n              )\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000)\n            })\n            .catch(error => {\n              setMessage(\n                `[ERROR] ${error.response.data.error}`\n              )\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000)\n              console.log(error.response.data)\n            })\n    }\n  }\n\n  const deletePerson = (id) => {\n    const filteredPerson = allPersons.filter(person => person.id === id)\n    const personName = filteredPerson[0].name\n    const personId = filteredPerson[0].id\n    if (window.confirm(`Delete ${personName} ?`)) {\n      personService\n        .remove(personId)\n      console.log(`${personName} successfully deleted`)\n      setMessage(\n        `${personName} was successfully deleted`\n      )\n      setAllPersons(allPersons.filter(person => person.id !== personId))\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n    const regex = new RegExp( newFilter, 'i' );\n    const filteredPersons = () => allPersons.filter(person => person.name.match(regex))\n    setPersons(filteredPersons)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter value={newFilter} onChange={handleFilterChange} />\n      <h2>Add new person</h2>\n      <PersonForm onSubmit={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Content persons={persons} allPersons={allPersons} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}